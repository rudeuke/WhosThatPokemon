// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhosThatPokemon.Data;

#nullable disable

namespace WhosThatPokemon.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230721190342_Initial-DatabaseFix")]
    partial class InitialDatabaseFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokemonType", b =>
                {
                    b.Property<int>("PokemonTypesPokeType")
                        .HasColumnType("int");

                    b.Property<int>("PokemonsId")
                        .HasColumnType("int");

                    b.HasKey("PokemonTypesPokeType", "PokemonsId");

                    b.HasIndex("PokemonsId");

                    b.ToTable("PokemonType");

                    b.HasData(
                        new
                        {
                            PokemonTypesPokeType = 4,
                            PokemonsId = 1
                        },
                        new
                        {
                            PokemonTypesPokeType = 3,
                            PokemonsId = 2
                        },
                        new
                        {
                            PokemonTypesPokeType = 1,
                            PokemonsId = 3
                        },
                        new
                        {
                            PokemonTypesPokeType = 2,
                            PokemonsId = 4
                        });
                });

            modelBuilder.Entity("TypeType", b =>
                {
                    b.Property<int>("ResistantToPokeType")
                        .HasColumnType("int");

                    b.Property<int>("ResistedByPokeType")
                        .HasColumnType("int");

                    b.HasKey("ResistantToPokeType", "ResistedByPokeType");

                    b.HasIndex("ResistedByPokeType");

                    b.ToTable("TypeType");

                    b.HasData(
                        new
                        {
                            ResistantToPokeType = 11,
                            ResistedByPokeType = 6
                        },
                        new
                        {
                            ResistantToPokeType = 12,
                            ResistedByPokeType = 6
                        },
                        new
                        {
                            ResistantToPokeType = 14,
                            ResistedByPokeType = 6
                        },
                        new
                        {
                            ResistantToPokeType = 3,
                            ResistedByPokeType = 9
                        },
                        new
                        {
                            ResistantToPokeType = 6,
                            ResistedByPokeType = 9
                        },
                        new
                        {
                            ResistantToPokeType = 11,
                            ResistedByPokeType = 9
                        },
                        new
                        {
                            ResistantToPokeType = 3,
                            ResistedByPokeType = 7
                        },
                        new
                        {
                            ResistantToPokeType = 7,
                            ResistedByPokeType = 7
                        },
                        new
                        {
                            ResistantToPokeType = 6,
                            ResistedByPokeType = 7
                        },
                        new
                        {
                            ResistantToPokeType = 11,
                            ResistedByPokeType = 7
                        },
                        new
                        {
                            ResistantToPokeType = 17,
                            ResistedByPokeType = 7
                        },
                        new
                        {
                            ResistantToPokeType = 7,
                            ResistedByPokeType = 8
                        },
                        new
                        {
                            ResistantToPokeType = 12,
                            ResistedByPokeType = 8
                        },
                        new
                        {
                            ResistantToPokeType = 0,
                            ResistedByPokeType = 12
                        },
                        new
                        {
                            ResistantToPokeType = 1,
                            ResistedByPokeType = 12
                        },
                        new
                        {
                            ResistantToPokeType = 7,
                            ResistedByPokeType = 12
                        },
                        new
                        {
                            ResistantToPokeType = 9,
                            ResistedByPokeType = 12
                        },
                        new
                        {
                            ResistantToPokeType = 3,
                            ResistedByPokeType = 11
                        },
                        new
                        {
                            ResistantToPokeType = 6,
                            ResistedByPokeType = 11
                        },
                        new
                        {
                            ResistantToPokeType = 8,
                            ResistedByPokeType = 11
                        },
                        new
                        {
                            ResistantToPokeType = 7,
                            ResistedByPokeType = 13
                        },
                        new
                        {
                            ResistantToPokeType = 11,
                            ResistedByPokeType = 13
                        },
                        new
                        {
                            ResistantToPokeType = 0,
                            ResistedByPokeType = 16
                        },
                        new
                        {
                            ResistantToPokeType = 3,
                            ResistedByPokeType = 16
                        },
                        new
                        {
                            ResistantToPokeType = 5,
                            ResistedByPokeType = 16
                        },
                        new
                        {
                            ResistantToPokeType = 6,
                            ResistedByPokeType = 16
                        },
                        new
                        {
                            ResistantToPokeType = 10,
                            ResistedByPokeType = 16
                        },
                        new
                        {
                            ResistantToPokeType = 11,
                            ResistedByPokeType = 16
                        },
                        new
                        {
                            ResistantToPokeType = 12,
                            ResistedByPokeType = 16
                        },
                        new
                        {
                            ResistantToPokeType = 15,
                            ResistedByPokeType = 16
                        },
                        new
                        {
                            ResistantToPokeType = 16,
                            ResistedByPokeType = 16
                        },
                        new
                        {
                            ResistantToPokeType = 17,
                            ResistedByPokeType = 16
                        },
                        new
                        {
                            ResistantToPokeType = 1,
                            ResistedByPokeType = 1
                        },
                        new
                        {
                            ResistantToPokeType = 3,
                            ResistedByPokeType = 1
                        },
                        new
                        {
                            ResistantToPokeType = 5,
                            ResistedByPokeType = 1
                        },
                        new
                        {
                            ResistantToPokeType = 11,
                            ResistedByPokeType = 1
                        },
                        new
                        {
                            ResistantToPokeType = 16,
                            ResistedByPokeType = 1
                        },
                        new
                        {
                            ResistantToPokeType = 17,
                            ResistedByPokeType = 1
                        },
                        new
                        {
                            ResistantToPokeType = 1,
                            ResistedByPokeType = 2
                        },
                        new
                        {
                            ResistantToPokeType = 2,
                            ResistedByPokeType = 2
                        },
                        new
                        {
                            ResistantToPokeType = 5,
                            ResistedByPokeType = 2
                        },
                        new
                        {
                            ResistantToPokeType = 16,
                            ResistedByPokeType = 2
                        },
                        new
                        {
                            ResistantToPokeType = 2,
                            ResistedByPokeType = 3
                        },
                        new
                        {
                            ResistantToPokeType = 3,
                            ResistedByPokeType = 3
                        },
                        new
                        {
                            ResistantToPokeType = 4,
                            ResistedByPokeType = 3
                        },
                        new
                        {
                            ResistantToPokeType = 8,
                            ResistedByPokeType = 3
                        },
                        new
                        {
                            ResistantToPokeType = 4,
                            ResistedByPokeType = 4
                        },
                        new
                        {
                            ResistantToPokeType = 9,
                            ResistedByPokeType = 4
                        },
                        new
                        {
                            ResistantToPokeType = 16,
                            ResistedByPokeType = 4
                        },
                        new
                        {
                            ResistantToPokeType = 6,
                            ResistedByPokeType = 10
                        },
                        new
                        {
                            ResistantToPokeType = 10,
                            ResistedByPokeType = 10
                        },
                        new
                        {
                            ResistantToPokeType = 5,
                            ResistedByPokeType = 5
                        },
                        new
                        {
                            ResistantToPokeType = 1,
                            ResistedByPokeType = 15
                        },
                        new
                        {
                            ResistantToPokeType = 2,
                            ResistedByPokeType = 15
                        },
                        new
                        {
                            ResistantToPokeType = 3,
                            ResistedByPokeType = 15
                        },
                        new
                        {
                            ResistantToPokeType = 4,
                            ResistedByPokeType = 15
                        },
                        new
                        {
                            ResistantToPokeType = 13,
                            ResistedByPokeType = 14
                        },
                        new
                        {
                            ResistantToPokeType = 14,
                            ResistedByPokeType = 14
                        },
                        new
                        {
                            ResistantToPokeType = 6,
                            ResistedByPokeType = 17
                        },
                        new
                        {
                            ResistantToPokeType = 11,
                            ResistedByPokeType = 17
                        },
                        new
                        {
                            ResistantToPokeType = 14,
                            ResistedByPokeType = 17
                        });
                });

            modelBuilder.Entity("TypeType1", b =>
                {
                    b.Property<int>("EffectiveAgainstPokeType")
                        .HasColumnType("int");

                    b.Property<int>("VulnerableToPokeType")
                        .HasColumnType("int");

                    b.HasKey("EffectiveAgainstPokeType", "VulnerableToPokeType");

                    b.HasIndex("VulnerableToPokeType");

                    b.ToTable("TypeType1");

                    b.HasData(
                        new
                        {
                            EffectiveAgainstPokeType = 0,
                            VulnerableToPokeType = 6
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 6,
                            VulnerableToPokeType = 9
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 6,
                            VulnerableToPokeType = 10
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 6,
                            VulnerableToPokeType = 17
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 9,
                            VulnerableToPokeType = 12
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 9,
                            VulnerableToPokeType = 4
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 9,
                            VulnerableToPokeType = 5
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 7,
                            VulnerableToPokeType = 8
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 7,
                            VulnerableToPokeType = 10
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 8,
                            VulnerableToPokeType = 2
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 8,
                            VulnerableToPokeType = 3
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 8,
                            VulnerableToPokeType = 5
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 12,
                            VulnerableToPokeType = 2
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 12,
                            VulnerableToPokeType = 3
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 12,
                            VulnerableToPokeType = 6
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 12,
                            VulnerableToPokeType = 8
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 12,
                            VulnerableToPokeType = 16
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 11,
                            VulnerableToPokeType = 1
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 11,
                            VulnerableToPokeType = 9
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 11,
                            VulnerableToPokeType = 12
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 13,
                            VulnerableToPokeType = 13
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 13,
                            VulnerableToPokeType = 14
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 16,
                            VulnerableToPokeType = 1
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 16,
                            VulnerableToPokeType = 6
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 16,
                            VulnerableToPokeType = 8
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 1,
                            VulnerableToPokeType = 2
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 1,
                            VulnerableToPokeType = 8
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 1,
                            VulnerableToPokeType = 12
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 2,
                            VulnerableToPokeType = 4
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 2,
                            VulnerableToPokeType = 3
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 3,
                            VulnerableToPokeType = 1
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 3,
                            VulnerableToPokeType = 5
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 3,
                            VulnerableToPokeType = 7
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 3,
                            VulnerableToPokeType = 9
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 3,
                            VulnerableToPokeType = 11
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 4,
                            VulnerableToPokeType = 8
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 10,
                            VulnerableToPokeType = 11
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 10,
                            VulnerableToPokeType = 13
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 10,
                            VulnerableToPokeType = 14
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 5,
                            VulnerableToPokeType = 1
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 5,
                            VulnerableToPokeType = 6
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 5,
                            VulnerableToPokeType = 12
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 5,
                            VulnerableToPokeType = 16
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 15,
                            VulnerableToPokeType = 5
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 15,
                            VulnerableToPokeType = 15
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 15,
                            VulnerableToPokeType = 17
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 14,
                            VulnerableToPokeType = 6
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 14,
                            VulnerableToPokeType = 11
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 14,
                            VulnerableToPokeType = 17
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 17,
                            VulnerableToPokeType = 7
                        },
                        new
                        {
                            EffectiveAgainstPokeType = 17,
                            VulnerableToPokeType = 16
                        });
                });

            modelBuilder.Entity("TypeType2", b =>
                {
                    b.Property<int>("IneffectiveToPokeType")
                        .HasColumnType("int");

                    b.Property<int>("UnaffectedByPokeType")
                        .HasColumnType("int");

                    b.HasKey("IneffectiveToPokeType", "UnaffectedByPokeType");

                    b.HasIndex("UnaffectedByPokeType");

                    b.ToTable("TypeType2");

                    b.HasData(
                        new
                        {
                            IneffectiveToPokeType = 0,
                            UnaffectedByPokeType = 13
                        },
                        new
                        {
                            IneffectiveToPokeType = 9,
                            UnaffectedByPokeType = 8
                        },
                        new
                        {
                            IneffectiveToPokeType = 8,
                            UnaffectedByPokeType = 4
                        },
                        new
                        {
                            IneffectiveToPokeType = 13,
                            UnaffectedByPokeType = 0
                        },
                        new
                        {
                            IneffectiveToPokeType = 13,
                            UnaffectedByPokeType = 6
                        },
                        new
                        {
                            IneffectiveToPokeType = 16,
                            UnaffectedByPokeType = 7
                        },
                        new
                        {
                            IneffectiveToPokeType = 14,
                            UnaffectedByPokeType = 10
                        },
                        new
                        {
                            IneffectiveToPokeType = 17,
                            UnaffectedByPokeType = 15
                        });
                });

            modelBuilder.Entity("WhosThatPokemon.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OriginalId")
                        .HasColumnType("int");

                    b.Property<string>("SilhouetteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "pikachu.png",
                            Name = "Pikachu",
                            OriginalId = 25
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "bulbasaur.png",
                            Name = "Bulbasaur",
                            OriginalId = 1
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "charmander.png",
                            Name = "Charmander",
                            OriginalId = 4
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "squirtle.png",
                            Name = "Squirtle",
                            OriginalId = 7
                        });
                });

            modelBuilder.Entity("WhosThatPokemon.Models.Type", b =>
                {
                    b.Property<int>("PokeType")
                        .HasColumnType("int");

                    b.HasKey("PokeType");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            PokeType = 0
                        },
                        new
                        {
                            PokeType = 6
                        },
                        new
                        {
                            PokeType = 9
                        },
                        new
                        {
                            PokeType = 7
                        },
                        new
                        {
                            PokeType = 8
                        },
                        new
                        {
                            PokeType = 12
                        },
                        new
                        {
                            PokeType = 11
                        },
                        new
                        {
                            PokeType = 13
                        },
                        new
                        {
                            PokeType = 16
                        },
                        new
                        {
                            PokeType = 1
                        },
                        new
                        {
                            PokeType = 2
                        },
                        new
                        {
                            PokeType = 3
                        },
                        new
                        {
                            PokeType = 4
                        },
                        new
                        {
                            PokeType = 10
                        },
                        new
                        {
                            PokeType = 5
                        },
                        new
                        {
                            PokeType = 15
                        },
                        new
                        {
                            PokeType = 14
                        },
                        new
                        {
                            PokeType = 17
                        });
                });

            modelBuilder.Entity("PokemonType", b =>
                {
                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("PokemonTypesPokeType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhosThatPokemon.Models.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("PokemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TypeType", b =>
                {
                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("ResistantToPokeType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("ResistedByPokeType")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TypeType1", b =>
                {
                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("EffectiveAgainstPokeType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("VulnerableToPokeType")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TypeType2", b =>
                {
                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("IneffectiveToPokeType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("UnaffectedByPokeType")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
