// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhosThatPokemon.Data;

#nullable disable

namespace WhosThatPokemon.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230716153850_AddPokemonTypes")]
    partial class AddPokemonTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokemonType", b =>
                {
                    b.Property<int>("PokemonTypesId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonsId")
                        .HasColumnType("int");

                    b.HasKey("PokemonTypesId", "PokemonsId");

                    b.HasIndex("PokemonsId");

                    b.ToTable("PokemonType");

                    b.HasData(
                        new
                        {
                            PokemonTypesId = 13,
                            PokemonsId = 1
                        },
                        new
                        {
                            PokemonTypesId = 12,
                            PokemonsId = 2
                        },
                        new
                        {
                            PokemonTypesId = 10,
                            PokemonsId = 3
                        },
                        new
                        {
                            PokemonTypesId = 11,
                            PokemonsId = 4
                        });
                });

            modelBuilder.Entity("TypeType", b =>
                {
                    b.Property<int>("ResistantToId")
                        .HasColumnType("int");

                    b.Property<int>("ResistedById")
                        .HasColumnType("int");

                    b.HasKey("ResistantToId", "ResistedById");

                    b.HasIndex("ResistedById");

                    b.ToTable("TypeType");

                    b.HasData(
                        new
                        {
                            ResistantToId = 7,
                            ResistedById = 2
                        },
                        new
                        {
                            ResistantToId = 6,
                            ResistedById = 2
                        },
                        new
                        {
                            ResistantToId = 17,
                            ResistedById = 2
                        },
                        new
                        {
                            ResistantToId = 12,
                            ResistedById = 3
                        },
                        new
                        {
                            ResistantToId = 2,
                            ResistedById = 3
                        },
                        new
                        {
                            ResistantToId = 7,
                            ResistedById = 3
                        },
                        new
                        {
                            ResistantToId = 12,
                            ResistedById = 4
                        },
                        new
                        {
                            ResistantToId = 4,
                            ResistedById = 4
                        },
                        new
                        {
                            ResistantToId = 2,
                            ResistedById = 4
                        },
                        new
                        {
                            ResistantToId = 7,
                            ResistedById = 4
                        },
                        new
                        {
                            ResistantToId = 18,
                            ResistedById = 4
                        },
                        new
                        {
                            ResistantToId = 4,
                            ResistedById = 5
                        },
                        new
                        {
                            ResistantToId = 6,
                            ResistedById = 5
                        },
                        new
                        {
                            ResistantToId = 1,
                            ResistedById = 6
                        },
                        new
                        {
                            ResistantToId = 10,
                            ResistedById = 6
                        },
                        new
                        {
                            ResistantToId = 4,
                            ResistedById = 6
                        },
                        new
                        {
                            ResistantToId = 3,
                            ResistedById = 6
                        },
                        new
                        {
                            ResistantToId = 12,
                            ResistedById = 7
                        },
                        new
                        {
                            ResistantToId = 2,
                            ResistedById = 7
                        },
                        new
                        {
                            ResistantToId = 5,
                            ResistedById = 7
                        },
                        new
                        {
                            ResistantToId = 4,
                            ResistedById = 8
                        },
                        new
                        {
                            ResistantToId = 7,
                            ResistedById = 8
                        },
                        new
                        {
                            ResistantToId = 1,
                            ResistedById = 9
                        },
                        new
                        {
                            ResistantToId = 12,
                            ResistedById = 9
                        },
                        new
                        {
                            ResistantToId = 15,
                            ResistedById = 9
                        },
                        new
                        {
                            ResistantToId = 2,
                            ResistedById = 9
                        },
                        new
                        {
                            ResistantToId = 14,
                            ResistedById = 9
                        },
                        new
                        {
                            ResistantToId = 7,
                            ResistedById = 9
                        },
                        new
                        {
                            ResistantToId = 6,
                            ResistedById = 9
                        },
                        new
                        {
                            ResistantToId = 16,
                            ResistedById = 9
                        },
                        new
                        {
                            ResistantToId = 9,
                            ResistedById = 9
                        },
                        new
                        {
                            ResistantToId = 18,
                            ResistedById = 9
                        },
                        new
                        {
                            ResistantToId = 10,
                            ResistedById = 10
                        },
                        new
                        {
                            ResistantToId = 12,
                            ResistedById = 10
                        },
                        new
                        {
                            ResistantToId = 15,
                            ResistedById = 10
                        },
                        new
                        {
                            ResistantToId = 7,
                            ResistedById = 10
                        },
                        new
                        {
                            ResistantToId = 9,
                            ResistedById = 10
                        },
                        new
                        {
                            ResistantToId = 18,
                            ResistedById = 10
                        },
                        new
                        {
                            ResistantToId = 10,
                            ResistedById = 11
                        },
                        new
                        {
                            ResistantToId = 11,
                            ResistedById = 11
                        },
                        new
                        {
                            ResistantToId = 15,
                            ResistedById = 11
                        },
                        new
                        {
                            ResistantToId = 9,
                            ResistedById = 11
                        },
                        new
                        {
                            ResistantToId = 11,
                            ResistedById = 12
                        },
                        new
                        {
                            ResistantToId = 12,
                            ResistedById = 12
                        },
                        new
                        {
                            ResistantToId = 13,
                            ResistedById = 12
                        },
                        new
                        {
                            ResistantToId = 5,
                            ResistedById = 12
                        },
                        new
                        {
                            ResistantToId = 13,
                            ResistedById = 13
                        },
                        new
                        {
                            ResistantToId = 3,
                            ResistedById = 13
                        },
                        new
                        {
                            ResistantToId = 9,
                            ResistedById = 13
                        },
                        new
                        {
                            ResistantToId = 2,
                            ResistedById = 14
                        },
                        new
                        {
                            ResistantToId = 14,
                            ResistedById = 14
                        },
                        new
                        {
                            ResistantToId = 15,
                            ResistedById = 15
                        },
                        new
                        {
                            ResistantToId = 10,
                            ResistedById = 16
                        },
                        new
                        {
                            ResistantToId = 11,
                            ResistedById = 16
                        },
                        new
                        {
                            ResistantToId = 12,
                            ResistedById = 16
                        },
                        new
                        {
                            ResistantToId = 13,
                            ResistedById = 16
                        },
                        new
                        {
                            ResistantToId = 8,
                            ResistedById = 17
                        },
                        new
                        {
                            ResistantToId = 17,
                            ResistedById = 17
                        },
                        new
                        {
                            ResistantToId = 2,
                            ResistedById = 18
                        },
                        new
                        {
                            ResistantToId = 7,
                            ResistedById = 18
                        },
                        new
                        {
                            ResistantToId = 17,
                            ResistedById = 18
                        });
                });

            modelBuilder.Entity("TypeType1", b =>
                {
                    b.Property<int>("EffectiveAgainstId")
                        .HasColumnType("int");

                    b.Property<int>("VulnerableToId")
                        .HasColumnType("int");

                    b.HasKey("EffectiveAgainstId", "VulnerableToId");

                    b.HasIndex("VulnerableToId");

                    b.ToTable("TypeType1");

                    b.HasData(
                        new
                        {
                            EffectiveAgainstId = 1,
                            VulnerableToId = 2
                        },
                        new
                        {
                            EffectiveAgainstId = 2,
                            VulnerableToId = 3
                        },
                        new
                        {
                            EffectiveAgainstId = 2,
                            VulnerableToId = 14
                        },
                        new
                        {
                            EffectiveAgainstId = 2,
                            VulnerableToId = 18
                        },
                        new
                        {
                            EffectiveAgainstId = 3,
                            VulnerableToId = 6
                        },
                        new
                        {
                            EffectiveAgainstId = 3,
                            VulnerableToId = 13
                        },
                        new
                        {
                            EffectiveAgainstId = 3,
                            VulnerableToId = 15
                        },
                        new
                        {
                            EffectiveAgainstId = 4,
                            VulnerableToId = 5
                        },
                        new
                        {
                            EffectiveAgainstId = 4,
                            VulnerableToId = 14
                        },
                        new
                        {
                            EffectiveAgainstId = 5,
                            VulnerableToId = 11
                        },
                        new
                        {
                            EffectiveAgainstId = 5,
                            VulnerableToId = 12
                        },
                        new
                        {
                            EffectiveAgainstId = 5,
                            VulnerableToId = 15
                        },
                        new
                        {
                            EffectiveAgainstId = 6,
                            VulnerableToId = 11
                        },
                        new
                        {
                            EffectiveAgainstId = 6,
                            VulnerableToId = 12
                        },
                        new
                        {
                            EffectiveAgainstId = 6,
                            VulnerableToId = 2
                        },
                        new
                        {
                            EffectiveAgainstId = 6,
                            VulnerableToId = 5
                        },
                        new
                        {
                            EffectiveAgainstId = 6,
                            VulnerableToId = 9
                        },
                        new
                        {
                            EffectiveAgainstId = 7,
                            VulnerableToId = 10
                        },
                        new
                        {
                            EffectiveAgainstId = 7,
                            VulnerableToId = 3
                        },
                        new
                        {
                            EffectiveAgainstId = 7,
                            VulnerableToId = 6
                        },
                        new
                        {
                            EffectiveAgainstId = 8,
                            VulnerableToId = 8
                        },
                        new
                        {
                            EffectiveAgainstId = 8,
                            VulnerableToId = 17
                        },
                        new
                        {
                            EffectiveAgainstId = 9,
                            VulnerableToId = 10
                        },
                        new
                        {
                            EffectiveAgainstId = 9,
                            VulnerableToId = 2
                        },
                        new
                        {
                            EffectiveAgainstId = 9,
                            VulnerableToId = 5
                        },
                        new
                        {
                            EffectiveAgainstId = 10,
                            VulnerableToId = 11
                        },
                        new
                        {
                            EffectiveAgainstId = 10,
                            VulnerableToId = 5
                        },
                        new
                        {
                            EffectiveAgainstId = 10,
                            VulnerableToId = 6
                        },
                        new
                        {
                            EffectiveAgainstId = 11,
                            VulnerableToId = 13
                        },
                        new
                        {
                            EffectiveAgainstId = 11,
                            VulnerableToId = 12
                        },
                        new
                        {
                            EffectiveAgainstId = 12,
                            VulnerableToId = 10
                        },
                        new
                        {
                            EffectiveAgainstId = 12,
                            VulnerableToId = 15
                        },
                        new
                        {
                            EffectiveAgainstId = 12,
                            VulnerableToId = 4
                        },
                        new
                        {
                            EffectiveAgainstId = 12,
                            VulnerableToId = 3
                        },
                        new
                        {
                            EffectiveAgainstId = 12,
                            VulnerableToId = 7
                        },
                        new
                        {
                            EffectiveAgainstId = 13,
                            VulnerableToId = 5
                        },
                        new
                        {
                            EffectiveAgainstId = 14,
                            VulnerableToId = 7
                        },
                        new
                        {
                            EffectiveAgainstId = 14,
                            VulnerableToId = 8
                        },
                        new
                        {
                            EffectiveAgainstId = 14,
                            VulnerableToId = 17
                        },
                        new
                        {
                            EffectiveAgainstId = 15,
                            VulnerableToId = 10
                        },
                        new
                        {
                            EffectiveAgainstId = 15,
                            VulnerableToId = 2
                        },
                        new
                        {
                            EffectiveAgainstId = 15,
                            VulnerableToId = 6
                        },
                        new
                        {
                            EffectiveAgainstId = 15,
                            VulnerableToId = 9
                        },
                        new
                        {
                            EffectiveAgainstId = 16,
                            VulnerableToId = 15
                        },
                        new
                        {
                            EffectiveAgainstId = 16,
                            VulnerableToId = 16
                        },
                        new
                        {
                            EffectiveAgainstId = 16,
                            VulnerableToId = 18
                        },
                        new
                        {
                            EffectiveAgainstId = 17,
                            VulnerableToId = 2
                        },
                        new
                        {
                            EffectiveAgainstId = 17,
                            VulnerableToId = 7
                        },
                        new
                        {
                            EffectiveAgainstId = 17,
                            VulnerableToId = 18
                        },
                        new
                        {
                            EffectiveAgainstId = 18,
                            VulnerableToId = 4
                        },
                        new
                        {
                            EffectiveAgainstId = 18,
                            VulnerableToId = 9
                        });
                });

            modelBuilder.Entity("TypeType2", b =>
                {
                    b.Property<int>("IneffectiveToId")
                        .HasColumnType("int");

                    b.Property<int>("UnaffectedById")
                        .HasColumnType("int");

                    b.HasKey("IneffectiveToId", "UnaffectedById");

                    b.HasIndex("UnaffectedById");

                    b.ToTable("TypeType2");

                    b.HasData(
                        new
                        {
                            IneffectiveToId = 1,
                            UnaffectedById = 8
                        },
                        new
                        {
                            IneffectiveToId = 3,
                            UnaffectedById = 5
                        },
                        new
                        {
                            IneffectiveToId = 5,
                            UnaffectedById = 13
                        },
                        new
                        {
                            IneffectiveToId = 8,
                            UnaffectedById = 1
                        },
                        new
                        {
                            IneffectiveToId = 8,
                            UnaffectedById = 2
                        },
                        new
                        {
                            IneffectiveToId = 9,
                            UnaffectedById = 4
                        },
                        new
                        {
                            IneffectiveToId = 17,
                            UnaffectedById = 14
                        },
                        new
                        {
                            IneffectiveToId = 18,
                            UnaffectedById = 16
                        });
                });

            modelBuilder.Entity("WhosThatPokemon.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OriginalId")
                        .HasColumnType("int");

                    b.Property<string>("SilhouetteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "~/images/pokemons/pikachu.png",
                            Name = "Pikachu",
                            OriginalId = 25
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "~/images/pokemons/bulbasaur.png",
                            Name = "Bulbasaur",
                            OriginalId = 1
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "~/images/pokemons/charmander.png",
                            Name = "Charmander",
                            OriginalId = 4
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "~/images/pokemons/squirtle.png",
                            Name = "Squirtle",
                            OriginalId = 7
                        });
                });

            modelBuilder.Entity("WhosThatPokemon.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PokeType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PokeType = 0
                        },
                        new
                        {
                            Id = 2,
                            PokeType = 6
                        },
                        new
                        {
                            Id = 3,
                            PokeType = 9
                        },
                        new
                        {
                            Id = 4,
                            PokeType = 7
                        },
                        new
                        {
                            Id = 5,
                            PokeType = 8
                        },
                        new
                        {
                            Id = 6,
                            PokeType = 12
                        },
                        new
                        {
                            Id = 7,
                            PokeType = 11
                        },
                        new
                        {
                            Id = 8,
                            PokeType = 13
                        },
                        new
                        {
                            Id = 9,
                            PokeType = 16
                        },
                        new
                        {
                            Id = 10,
                            PokeType = 1
                        },
                        new
                        {
                            Id = 11,
                            PokeType = 2
                        },
                        new
                        {
                            Id = 12,
                            PokeType = 3
                        },
                        new
                        {
                            Id = 13,
                            PokeType = 4
                        },
                        new
                        {
                            Id = 14,
                            PokeType = 10
                        },
                        new
                        {
                            Id = 15,
                            PokeType = 5
                        },
                        new
                        {
                            Id = 16,
                            PokeType = 15
                        },
                        new
                        {
                            Id = 17,
                            PokeType = 14
                        },
                        new
                        {
                            Id = 18,
                            PokeType = 17
                        });
                });

            modelBuilder.Entity("PokemonType", b =>
                {
                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("PokemonTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhosThatPokemon.Models.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("PokemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TypeType", b =>
                {
                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("ResistantToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("ResistedById")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TypeType1", b =>
                {
                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("EffectiveAgainstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("VulnerableToId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TypeType2", b =>
                {
                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("IneffectiveToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WhosThatPokemon.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("UnaffectedById")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
